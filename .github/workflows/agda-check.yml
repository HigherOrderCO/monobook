name: Check Agda Files

on:
  schedule:
    # Runs twice a day at 08:00 and 18:00 BRT
    - cron: '0 11,21 * * *'
  workflow_dispatch: # Allows manual triggering

jobs:
  check-all-agda: 
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up environment
        run: |
          echo "PATH=$PATH:/usr/local/bin:/home/runner/.local/bin" >> $GITHUB_ENV

      - name: Verify Agda and agda-cli installations
        run: |
          agda --version
          which agda-cli

      - name: Run Agda checks
        id: check_agda
        run: | 
          OK_OUTPUT=$'Checked.\nNo output'

          check_file() {
            file="$1"	
            output=$(agda-cli check "$file" 2>&1)
            if [ "$output" = "$OK_OUTPUT" ]; then
              echo "Checked $file: OK"
            else
              echo -e "\033[31mChecking: $file ERR\033[0m"
              echo "$output"
              {
                echo "Checking: $file ERR"
                echo "$output"
                echo ""
              } >> error_output.log
              echo "errors_found=true" >> $GITHUB_ENV
            fi 
          }
          export -f check_file
          export OK_OUTPUT

          find "./Base" -name "*.agda" -not -path "*.tmp*" -not -path "*/Test/*" -print0 | \
            parallel -0 -j 48 check_file

          if [ -f error_output.log ]; then
            error_output=$(cat error_output.log)
            echo "error_output<<EOF" >> $GITHUB_OUTPUT
            echo "$error_output" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi
        timeout-minutes: 10


      - name: Find existing issue
        id: find_existing_issue
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              });
            const existingIssue = issues.find(issue => 
              issue.title === "Agda Check Errors (Auto-generated)" && issue.user.login === 'github-actions[bot]' && issue.labels.some(label => label.name === 'errors')
            );
            return existingIssue ? existingIssue.number : null;
          result-encoding: string
            
      - name: Create or update issue
        if: env.errors_found == 'true'
        uses: peter-evans/create-or-update-comment@v3
        with: 
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ steps.find_existing_issue.outputs.result || 'new'}}
          body: |
            # Agda Check Errors
            The following files failed checking:
            ```hs
            ${{ steps.check_agda.outputs.error_output }}
            ```
          title: "Agda Check Errors (Auto-generated)"
          labels: errors, automated
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Save Issue Number
        if: ${{ steps.find_existing_issue.outputs.result == '' && env.errors_found == 'true' }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issue_number = {{ steps.create_or_update_comment.outputs.issue_number }};
            fs.writeFileSync('.issue_number', issue_number);

      - name: Upload output as an artifact
        if: env.errors_found == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: agda-check-output
          path: error_output.log

      - name: Clean up
        run: rm -f error_output.log

