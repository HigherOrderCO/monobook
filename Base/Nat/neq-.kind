use Base/Nat/ as N/
use Base/Bool/ as B/
use Base/Equal/ as E/

// Test cases for neq function

// Test : Different numbers should return True.
T0
: (E/Equal B/Bool (N/neq #Succ{#Zero{}} #Zero{}) #True{})
= #Refl{}

// Test : Same numbers should return False.
T1
: (E/Equal B/Bool (N/neq #Succ{#Succ{#Zero{}}} #Succ{#Succ{#Zero{}}}) #False{})
= #Refl{}

// Test : Zero and a non-zero number should return True.
T2
: (E/Equal B/Bool (N/neq #Zero{} #Succ{#Succ{#Succ{#Zero{}}}}) #True{})
= #Refl{}

// Test : Different non-zero numbers should return True.
T3
: (E/Equal B/Bool (N/neq #Succ{#Succ{#Succ{#Succ{#Zero{}}}}} #Succ{#Succ{#Succ{#Succ{#Succ{#Zero{}}}}}}) #True{})
= #Refl{}

// Test : Zero and itself should return False.
T4
: (E/Equal B/Bool (N/neq #Zero{} #Zero{}) #False{})
= #Refl{}

// Test : Larger numbers should work correctly.
T5
: (E/Equal B/Bool (N/neq #Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Zero{}}}}}}}}}}}
                        #Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Zero{}}}}}}}}}}}})
                  #True{})
= #Refl{}

// Test : Larger same numbers should return False.
T6
: (E/Equal B/Bool (N/neq #Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Zero{}}}}}}}}}}}
                        #Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Zero{}}}}}}}}}}})
                  #False{})
= #Refl{}