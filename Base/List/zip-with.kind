use Base/List/ as L/

// Zips two lists into a single list using a combining function.
// - A: The type of elements in the first list.
// - B: The type of elements in the second list.
// - C: The type of elements in the resulting list.
// - f: The function to combine elements from both lists.
// - xs: The first input list.
// - ys: The second input list.
// = A new list where each element is the result of applying f to
//   corresponding elements from xs and ys.
L/zip-with
: ∀(A: *)
  ∀(B: *)
  ∀(C: *)
  ∀(f: ∀(a: A) ∀(b: B) C)
  ∀(xs: (L/List A))
  ∀(ys: (L/List B))
  (L/List C)
= λA λB λC λf λ{
  #Nil: λys #Nil{}
  #Cons: λxs.head λxs.tail λ{
    #Nil: #Nil{}
    #Cons: λys.head λys.tail
      #Cons{
        head: (f xs.head ys.head)
        tail: (L/zip-with _ _ _ f xs.tail ys.tail)
      }
  }
}
