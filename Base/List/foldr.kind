use Base/List/ as L/

// Performs a right fold over a list.
// - A: The type of elements in the input list.
// - B: The type of the result.
// - co: The combining function.
// - ni: The initial value (for the empty list case).
// - xs: The list to fold over.
// = The result of folding the list.
L/foldr
: ∀(A: *)
  ∀(B: *)
  ∀(co: ∀(head: A) ∀(tail: B) B)
  ∀(ni: B)
  ∀(xs: (L/List A))
  B
= λA λB λco λni λ{
  #Nil: ni
  #Cons: λxs.head λxs.tail (co xs.head (L/foldr _ _ co ni xs.tail))
}
