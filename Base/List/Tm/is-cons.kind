use Base/List/ as L/
use Base/Bool/ as B/
use Base/Equal/ as E/
use Base/Nat/ as N/

// Proof that is-cons returns False for an empty list
L/is-cons-empty
: ∀(A: *)
  (E/Equal B/Bool (L/is-cons A (#Nil{})) #False{})
= λA #Refl{}

// Proof that is-cons returns True for a non-empty list
L/is-cons-cons
: ∀(A: *)
  ∀(x: A)
  ∀(xs: (L/List A))
  (E/Equal B/Bool (L/is-cons A (#Cons{x xs})) #True{})
= λA λx λxs #Refl{}

