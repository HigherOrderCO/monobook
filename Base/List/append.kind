use Base/List/ as L/

// Appends two lists.
// - A: The type of elements in the lists.
// - xs: The first list.
// - ys: The second list.
// = A new list containing all elements from both input lists.
L/append
: ∀(A: *)
  ∀(xs: (L/List A))
  ∀(ys: (L/List A))
  (L/List A)
= λA λxs λys
  (L/foldr _ _ (λhead λtail #Cons{head tail}) ys xs)
