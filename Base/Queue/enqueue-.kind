use Base/Queue/ as Q/
use Base/List/ as L/
use Base/Nat/ as N/
use Base/Equal/ as E/

// Test: Enqueue to an empty queue
T0
: (E/Equal (Q/Queue U32) (Q/enqueue U32 #MkQueue{#Nil{} #Nil{}} 1) #MkQueue{#Nil{} #Cons{1 #Nil{}}})
= #Refl{}

// Test: Enqueue to a queue with elements in front
T1
: (E/Equal (Q/Queue U32) (Q/enqueue U32 #MkQueue{#Cons{1 #Cons{2 #Nil{}}} #Nil{}} 3) #MkQueue{#Cons{1 #Cons{2 #Nil{}}} #Cons{3 #Nil{}}})
= #Refl{}

// Test: Enqueue to a queue with elements in back
T2
: (E/Equal (Q/Queue U32) (Q/enqueue U32 #MkQueue{#Nil{} #Cons{2 #Cons{1 #Nil{}}}} 3) #MkQueue{#Nil{} #Cons{3 #Cons{2 #Cons{1 #Nil{}}}}})
= #Refl{}

// Test: Enqueue to a queue with elements in both front and back
T3
: (E/Equal (Q/Queue U32) (Q/enqueue U32 #MkQueue{ #Cons{1 #Nil{}} #Cons{3 #Cons{2 #Nil{}}}} 4) #MkQueue{ #Cons{1 #Nil{}} #Cons{4 #Cons{3 #Cons{2 #Nil{}}}}})
= #Refl{}