use Base/BinTree/ as BT/
use Base/Maybe/ as M/
use Base/Nat/ as N/
use Base/Equal/ as E/

// Test: value of a leaf node is None
T0
: (E/Equal
    (M/Maybe N/Nat)
    (BT/value N/Nat #Leaf{})
    (#None{}))
= #Refl{}

// Test: value of a node with content 5 is (Some 5)
T1
: (E/Equal
    (M/Maybe N/Nat)
    (BT/value N/Nat (#Node{#Succ{#Succ{#Succ{#Succ{#Succ{#Zero{}}}}}} #Leaf{} #Leaf{}}))
    (#Some{#Succ{#Succ{#Succ{#Succ{#Succ{#Zero{}}}}}}}))
= #Refl{}

// Test: value of a complex tree returns the root node's value
T2
: (E/Equal
    (M/Maybe N/Nat)
    (BT/value N/Nat (#Node{
      #Succ{#Zero{}}
      (#Node{#Succ{#Succ{#Zero{}}} #Leaf{} #Leaf{}})
      (#Node{#Succ{#Succ{#Succ{#Zero{}}}} #Leaf{} #Leaf{}})
    }))
    (#Some{#Succ{#Zero{}}}))
= #Refl{}
