use Base/Pair/ as P/

// Sets the first component of a pair to a new value.
// This function creates a new pair with an updated first component.
// 1st: The type of the original first component.
// 2nd: The type of the second component.
// 3rd: The type of the new first component.
// 4th: The new value for the first component.
// 5th: The original pair.
// = A new pair with the updated first component and the original second component.
P/set-fst
: ∀(A: *)
  ∀(B: *)
  ∀(C: *)
  ∀(z: C)
  ∀(pair: (P/Pair A B))
  (P/Pair C B)
= λA λB λC λz λpair
  let x = (P/Sigma/fst _ _ pair)
  let y = (P/Sigma/snd _ _ pair)
  #Pair{ z y }