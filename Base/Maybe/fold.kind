use Base/Maybe/ as M/

// Folds over a Maybe value.
// - A: The type of the value inside Maybe.
// - B: The type of the result.
// - default: The value to return if the Maybe is None.
// - fn: The function to apply to the value if the Maybe is Some.
// - ma: The Maybe value to fold over.
// = Either the default value (if None) or the result of applying fn to the value (if Some).
M/fold
: ∀(A: *)
  ∀(B: *)
  ∀(default: B)
  ∀(fn: ∀(a: A) B)
  ∀(ma: (M/Maybe A))
  B
= λA λB λdefault λfn λ{
  #None: default
  #Some: λma.value (fn ma.value)
}
