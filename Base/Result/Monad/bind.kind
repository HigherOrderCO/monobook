use Base/Result/ as R/

// Applies a function to the value inside a Result, if it's successful.
// - 1st: The type of the value in the input Result.
// - 2nd: The type of the value in the output Result.
// - 3rd: The type of the error.
// - 4th: The Result value to operate on.
// - 5th: The function to apply to the value inside the Result if it's successful.
// = A new Result value resulting from applying 2nd to the contents of 1st if successful,
//   or the original error if 1st is a failure.
R/Monad/bind
: ∀(A: *)
  ∀(B: *)
  ∀(E: *)
  ∀(ra: (R/Result A E))
  ∀(fn: ∀(a: A) (R/Result B E))
  (R/Result B E)
= λA λB λE λ{
  #Done: λra.value λfn (fn ra.value)
  #Fail: λra.error λfn #Fail{ra.error}
}