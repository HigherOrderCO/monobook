use Base/U32/ as U32/
use Base/Bits/ as BS/
use Base/Nat/ as N/

// Converts a U32 value to its binary representation as Bits.
// 1st: The U32 value to convert.
// = The binary representation of the input U32 value as Bits.
U32/to-bits
: ∀(n: U32)
  BS/Bits
= λ{0: #O{#E{}}
		_: λ{0: #I{#E{}}
				_: λx.pred
				let quotient = (U32/div (+ 2 x.pred) 2)
				let remainder = (U32/mod (+ 2 x.pred) 2)
				(U32/if BS/Bits (U32/eql remainder 0)
					#O{(U32/to-bits quotient)}
					#I{(U32/to-bits quotient)})
		}
	}
